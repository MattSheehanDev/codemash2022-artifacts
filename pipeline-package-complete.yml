trigger:
  branches:
    include:
      - master
  paths:
    include:
      - pipeline-package-complete.yml

resources:
  repositories:
    - repository: DotnetSamples       # Name used during the checkout step
      type: Github
      endpoint: MattSheehanDev        # Service Connection name
      name: dotnet/samples

pool:
  # Equivalent of Windows Server 2019 with Visual Studio 2019
  vmImage: windows-latest

stages:
  - stage: BuildNumbersStage
    displayName: Build
    jobs:
      - job: BuildNumbers
        displayName: Build Numbers Project
        steps:
          - checkout: DotnetSamples
          - task: DotNetCoreCLI@2
            displayName: Build Numbers
            inputs:
              command: 'build'
              projects: 'csharp/unit-testing-code-coverage/Numbers/Numbers.csproj'
              arguments: '-o $(Build.ArtifactStagingDirectory)'
          - task: DotNetCoreCLI@2
            displayName: Pack Numbers
            inputs:
              command: 'pack'
              packagesToPack: 'csharp/unit-testing-code-coverage/Numbers/Numbers.csproj'
              configurationToPack: 'Release'
              packDirectory: '$(Build.ArtifactStagingDirectory)'
              arguments: '--no-restore --no-build'
              versioningScheme: 'byPrereleaseNumber'
              majorVersion: 1
              minorVersion: 0
              patchVersion: 0
          - task: PublishPipelineArtifact@1
            inputs:
              targetPath: '$(Build.ArtifactStagingDirectory)'
              artifactName: numbers

  - stage: TestNumbersStage
    displayName: Test
    jobs:
      - job: TestNumbers
        displayName: Test Numbers Project
        steps:
          - checkout: DotnetSamples
          - task: DotNetCoreCLI@2
            displayName: Build Tests
            inputs:
              command: 'build'
              projects: 'csharp/unit-testing-code-coverage/XUnit.Coverlet.Collector/XUnit.Coverlet.Collector.csproj'
          - task: DotNetCoreCLI@2
            displayName: Test Numbers
            inputs:
              command: 'test'
              projects: 'csharp/unit-testing-code-coverage/XUnit.Coverlet.Collector/XUnit.Coverlet.Collector.csproj'
              arguments: '--no-restore --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory $(Common.TestResultsDirectory)'
              # If publishTestResults is true, test results are published back to Azure Devops (same as the PublishTestResults task below)
              publishTestResults: false
          - task: PublishTestResults@2
            displayName: Publish Test Results
            inputs:
              testResultsFormat: 'VSTest'
              testResultsFiles: '$(Common.TestResultsDirectory)/**/*.trx'
              testRunTitle: Numbers Unit Tests
            # This will run the ReportGenerator to convert the code coverage xml to html
          - task: PublishCodeCoverageResults@1
            displayName: Publish Code Coverage Results
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: '$(Common.TestResultsDirectory)/**/coverage.cobertura.xml'

  - stage: PublishPublicFeed
    displayName: Public Feed
    dependsOn: TestNumbersStage
    jobs:
      - job: PublishNumbers
        displayName: Publish Nuget Package
        steps:
          - checkout: none
            # Download numbers artifact from the current pipeline run
          - download: current
            artifact: numbers
            # Publish NuGet package
          - task: DotNetCoreCLI@2
            displayName: Publish Numbers Package
            inputs:
              command: 'push'
              packagesToPush: '$(Agent.BuildDirectory)/**/*.nupkg'
              nuGetFeedType: 'internal'
              feedPublish: 'CodeMash/TestFeed'
            # Publish package symbols
            # Azure DevOps, as far as I know, still does not support snupkg
          - task: PublishSymbols@2
            displayName: Publish Numbers Symbols
            inputs:
              symbolsFolder: '$(Agent.BuildDirectory)'
              searchPattern: '**/bin/**/*.pdb'
              symbolServerType: 'TeamServices'
              
  - stage: PublishPrivateFeed
    displayName: Private Feed
    dependsOn: TestNumbersStage
    jobs:
      - job: PublishNumbers
        displayName: Publish Nuget Package
        steps:
          - checkout: none
            # Download numbers artifact from the current pipeline run
          - download: current
            artifact: numbers
            # Publish NuGet package
          - task: DotNetCoreCLI@2
            displayName: Publish Numbers Package
            inputs:
              command: 'push'
              packagesToPush: '$(Agent.BuildDirectory)/**/*.nupkg'
              nuGetFeedType: 'internal'
              feedPublish: 'CodeMashPrivate/PrivateFeed'
            # Publish package symbols
            # Azure DevOps, as far as I know, still does not support snupkg
          - task: PublishSymbols@2
            displayName: Publish Numbers Symbols
            inputs:
              symbolsFolder: '$(Agent.BuildDirectory)'
              searchPattern: '**/bin/**/*.pdb'
              symbolServerType: 'TeamServices'
