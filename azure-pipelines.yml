# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

resources:
  repositories:
    - repository: DotnetSamples       # Name used during the checkout step
      type: Github
      endpoint: MattSheehanDev       # Service Connection name
      name: dotnet/samples

pool:
  vmImage: windows-latest

stages:
  - stage: BuildApp
    displayName: Build App
    jobs:
      - job: BuildNumbers
        steps:
          - checkout: DotnetSamples
          - task: DotNetCoreCLI@2
            displayName: Build Numbers
            inputs:
              command: 'build'
              projects: |
                csharp/unit-testing-code-coverage/Numbers/Numbers.csproj
                csharp/unit-testing-code-coverage/XUnit.Coverlet.Collector/XUnit.Coverlet.Collector.csproj
          - task: DotNetCoreCLI@2
            displayName: Test Numbers
            inputs:
              command: 'test'
              projects: 'csharp/unit-testing-code-coverage/XUnit.Coverlet.Collector/XUnit.Coverlet.Collector.csproj'
              arguments: '--no-restore --no-build --collect:"XPlat Code Coverage"'
              publishTestResults: true    # Publishes test results back to Azure Devops

          # - task: PublishTestResults@2
          #   displayName: Publish Test Results
          #   inputs:
          #     testResultsFormat: 'VSTest'
          #     testResultsFiles: '**/*.trx'
          #     testRunTitle: PrimeService Unit Tests

