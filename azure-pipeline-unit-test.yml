trigger:
- master

resources:
  repositories:
    - repository: DotnetSamples       # Name used during the checkout step
      type: Github
      endpoint: MattSheehanDev       # Service Connection name
      name: dotnet/samples

pool:
  vmImage: windows-latest

stages:
  - stage: TestNumbersStage
    displayName: Build Dotnet Sample (Numbers)
    jobs:
      - job: BuildNumbers
        steps:
          - checkout: DotnetSamples
          - task: DotNetCoreCLI@2
            displayName: Build Numbers
            inputs:
              command: 'build'
              projects: |
                csharp/unit-testing-code-coverage/Numbers/Numbers.csproj
                csharp/unit-testing-code-coverage/XUnit.Coverlet.Collector/XUnit.Coverlet.Collector.csproj
          - task: DotNetCoreCLI@2
            displayName: Test Numbers
            inputs:
              command: 'test'
              projects: 'csharp/unit-testing-code-coverage/XUnit.Coverlet.Collector/XUnit.Coverlet.Collector.csproj'
              arguments: '--no-restore --no-build --collect:"XPlat Code Coverage" --logger trx --results-directory $(Agent.TempDirectory)'
              publishTestResults: false    # If true, publishes test results back to Azure Devops (same as the PublishTestResults task below)
          - task: PublishTestResults@2
            displayName: Publish Test Results
            inputs:
              testResultsFormat: 'VSTest'
              testResultsFiles: '$(Agent.TempDirectory)/**/*.trx'
              testRunTitle: Numbers Unit Tests
            # This will run the ReportGenerator to convert the code coverage xml to html
          - task: PublishCodeCoverageResults@1
            displayName: Publish Code Coverage Results
            inputs:
              codeCoverageTool: Cobertura
              summaryFileLocation: '$(Agent.TempDirectory)/**/coverage.cobertura.xml'

  - stage: BuildNumbersStage
    displayName: Build Dotnet Sample (Numbers)
    jobs:
      - job: BuildNumbers
        steps:
          - checkout: DotnetSamples
          - task: DotNetCoreCLI@2
            displayName: Build Numbers
            inputs:
              command: 'build'
              projects: 'csharp/unit-testing-code-coverage/Numbers/Numbers.csproj'
              arguments: '-o $(Build.ArtifactStagingDirectory)'
          - publish: '$(Build.ArtifactStagingDirectory)'
            artifact: Numbers

  - stage: Publish
    displayName: Publish Dotnet Sample (Numbers) Nuget Package
    dependsOn: BuildNumbersStage
    jobs:
      - job: PublishNumbers
        steps:
          - checkout: none
          - download: current  # Download artifacts from the current pipeline run
            artifact: Numbers
          - task: DotNetCoreCLI@2
            displayName: Publish Numbers Package
            inputs:
              command: 'push'
              packagesToPush: '$(Agent.BuildDirectory)/**/*.nupkg'
              nuGetFeedType: 'internal'
              feedPublish: 'NumbersFeed'
          - task: PublishSymbols@2
            displayName: Publish Numbers Symbols
            inputs:
              symbolsFolder: '$(Agent.BuildDirectory)'
              searchPattern: '**/bin/**/*.pdb'
              symbolServerType: 'TeamServices'
              
